from flask import Flask, request, redirect, jsonify
import random
import string

app = Flask(__name__)

# In-memory dictionary to store long URL and short URL mappings
url_mapping = {}

# Base URL of the service (change this to your deployed server's URL when deployed)
BASE_URL = "http://localhost:5000/"

# Function to generate a random short code for the URL
def generate_short_code(length=6):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

# API endpoint to create a short URL
@app.route('/shorten', methods=['POST'])
def shorten_url():
    long_url = request.form.get('long_url')
    
    # Check if the long URL was provided
    if not long_url:
        return jsonify({'error': 'No URL provided'}), 400
    
    # Generate a unique short code
    short_code = generate_short_code()
    
    # Store the mapping of the short code to the long URL
    url_mapping[short_code] = long_url
    
    # Return the short URL
    short_url = BASE_URL + short_code
    return jsonify({'short_url': short_url})

# API endpoint to handle redirection from short URL to the original long URL
@app.route('/<short_code>', methods=['GET'])
def redirect_to_long_url(short_code):
    # Look up the long URL using the short code
    long_url = url_mapping.get(short_code)
    
    if long_url:
        # Redirect to the long URL
        return redirect(long_url)
    else:
        return jsonify({'error': 'Invalid short URL'}), 404

# Home page or info endpoint
@app.route('/')
def index():
    return "Welcome to the URL Shortening Service! Use /shorten to shorten a URL."

# Run the Flask app
if __name__ == '__main__':
    app.run(debug=True)
